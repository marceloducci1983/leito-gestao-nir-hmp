
import { supabase } from '@/integrations/supabase/client';
import { toast } from 'sonner';

export const changeUserPassword = async (email: string, newPassword: string) => {
  try {
    console.log('üîÑ Iniciando altera√ß√£o de senha para:', email);
    
    // Primeiro, buscar o usu√°rio pelo email
    const { data: profiles, error: profileError } = await supabase
      .from('profiles')
      .select('id, email, full_name')
      .eq('email', email.toLowerCase().trim())
      .maybeSingle();

    if (profileError) {
      console.error('‚ùå Erro ao buscar usu√°rio:', profileError);
      toast.error('Erro ao buscar usu√°rio: ' + profileError.message);
      return { error: profileError };
    }

    if (!profiles) {
      console.error('‚ùå Usu√°rio n√£o encontrado:', email);
      toast.error('Usu√°rio n√£o encontrado');
      return { error: { message: 'Usu√°rio n√£o encontrado' } };
    }

    console.log('‚úÖ Usu√°rio encontrado:', profiles);

    // Usar Admin API para atualizar a senha
    const { error: updateError } = await supabase.auth.admin.updateUserById(
      profiles.id,
      { password: newPassword }
    );

    if (updateError) {
      console.error('‚ùå Erro ao alterar senha via Admin API:', updateError);
      toast.error('Erro ao alterar senha: ' + updateError.message);
      return { error: updateError };
    }

    console.log('üéâ Senha alterada com sucesso para:', email);
    toast.success(`‚úÖ Senha alterada com sucesso para ${profiles.full_name} (${email})`);
    
    return { error: null, user: profiles };

  } catch (error) {
    console.error('üí• Erro inesperado ao alterar senha:', error);
    const errorMsg = 'Erro inesperado ao alterar senha: ' + (error as Error).message;
    toast.error(errorMsg);
    return { error: { message: errorMsg } };
  }
};
